# Default values for openldap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# installCRDs determines whether Custom Resource Definitions (CRD) are installed by the chart.
# Note that CRDs are global resources and require cluster admin privileges to install.
# If you are sharing a cluster with other users who may want to install Openldap-Operator on their own namespaces, setting this to true can have unintended consequences.
# 1. Upgrades will overwrite the global CRDs and could disrupt the other users of Openldap-Operator who may be running a different version.
# 2. Uninstalling the chart will delete the CRDs and potentially cause Openldap-Operator resources deployed by other users to be removed as well.
installCRDs: true

replicaCount: 1

image:
  repository: docker.io/aescanero/openldap-controller
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# podSecurityContext defines the pod security context for the operator pod.
podSecurityContext:
  runAsNonRoot: true

# securityContext defines the security context of the operator container.
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 80

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 50Mi

nodeSelector: {}

tolerations: []

affinity: {}

webhook:
  # enabled determines whether the webhook is installed.
  enabled: true
  # caBundle is the PEM-encoded CA trust bundle for the webhook certificate. Only required if manageCerts is false and certManagerCert is null.
  caBundle: ""
  # certManagerCert is the name of the cert-manager certificate to use with the webhook.
  certManagerCert: null
  # certsDir is the directory to mount the certificates.
  certsDir: "/tmp/k8s-webhook-server/serving-certs"
  # manageCerts determines whether the operator manages the webhook certificates automatically.
  manageCerts: true

pki:
  # caValidity defines the validity period of the CA certificates generated by the operator.
  caValidity: 8760h
  # caRotateBefore defines when to rotate a CA certificate that is due to expire.
  caRotateBefore: 24h
  # certificatesValidity defines the validity period of certificates generated by the operator.
  certificatesValidity: 8760h
  # certificatesRotateBefore defines when to rotate a certificate that is due to expire.
  certificatesRotateBefore: 24h
  image:
    repository: docker.io/aescanero/micropki
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.1.1"